{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","prop","style","overflowY","border","height","children","ErrorBoundary","props","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobot","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAG,+BAA4BF,EAA5B,cACR,gCACC,mCAAMF,EAAN,OACA,kCAAKC,EAAL,cCcWI,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAElB,OACC,8BAEEA,EAAOC,KAAK,SAACC,EAAMC,GAClB,OACC,cAAC,EAAD,CAECP,GAAMI,EAAOG,GAAGP,GAChBF,KAAQM,EAAOG,GAAGT,KAClBC,MAASK,EAAOG,GAAGR,OAHZQ,SCGCC,EAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKT,UAAY,OAAjB,SACC,uBACCA,UAAY,mCACZU,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCCDI,EARA,SAACC,GACf,OACC,qBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEJ,EAAKK,YCkBMC,G,wDApBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAI9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,mDAEJG,KAAKL,MAAMF,a,GAjBES,cC8CbC,E,kDAxCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEnB,YAAauB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACVnB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OACnB0B,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,MAAI,CAAC,EAAKX,SAAS,CAAExB,OAAOmC,U,oBAOzC,WAAU,IAAD,EACwBZ,KAAKJ,MAA7BnB,EADA,EACAA,OAAQK,EADR,EACQA,YACV+B,EAAgBpC,EAAOqC,QAAO,SAAAC,GACnC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASnC,EAAYkC,kBAErD,OAAQvC,EAAOyC,OAGd,sBAAK5C,UAAW,KAAhB,UACC,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWS,aAAgBiB,KAAMI,iBACjC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU3B,OAAUoC,WAPxB,6C,GAzBeX,aCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cbf59f91.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\treturn (\t\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bx2 shadow-5'>\n\t\t\t<img src = {`https://robohash.org/${id}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2> {name} </h2>\n\t\t\t\t<p> {email} </p>\n\t\t\t</div>\t\n\t\t</div>\n\t);\t\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ({robots}) => {\n\tif (true) {\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\trobots.map( (user, i)  => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey = {i} \n\t\t\t\t\t\t\tid = {robots[i].id} \n\t\t\t\t\t\t\tname = {robots[i].name} \n\t\t\t\t\t\t\temail = {robots[i].email}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n  \t\t</div>\n  \t)};\n}\nexport default Cardlist;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n\treturn (\n\t\t<div className = 'pa2 '>\n\t\t\t<input \n\t\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype = 'search' \n\t\t\t\tplaceholder = 'search robots'\n\t\t\t\tonChange = {searchChange}/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (prop) => {\n\treturn (\n\t\t<div style= {{overflowY: 'scroll', border: '4px solid black', height: '900px'}}>\n\t\t\t{prop.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oooops. Not good!</h1>\n        }\n        return this.props.children\n    }   \n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport Cardlist from '../components/Cardlist';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t   robots: [] ,\n\t\t   searchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response=> response.json())\n\t\t\t.then(users => [this.setState({ robots:users })])\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value })\n\t}\n\n\trender() {\n\t\tconst { robots, searchfield } = this.state;\n\t\tconst filteredRobot = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\t\t\treturn !robots.length ?\n\t\t\t<h1>Loading</h1>:\n\t\t\t(\n\t\t\t\t<div className= 'tc'>\n\t\t\t\t\t<h1 className= 'f1'>RoboFriends</h1>\n\t\t\t\t\t<SearchBox searchChange = {this.\tonSearchChange}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<Cardlist robots = {filteredRobot}/>\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t\t\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\t\n\t\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}